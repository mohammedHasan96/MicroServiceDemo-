version: "2.2"

services:
  rabbitmq3:
    image: rabbitmq:3.8.14-management-alpine
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - "./data/rabbitmq3-data:/var/lib/rabbitmq/mnesia/"
  db:
    image: postgres:12.6-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
  adminer:
    image: adminer:4.8.0-standalone
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
  product-service:
    image: products-service
    build:
      context: ./products
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./products:/opt
      - ./opt/node_modules
    environment:
      - DATABASE_HOST=db
      - DATABASE_PASSWORD=example
      - DATABASE_USER=postgres
      - DATABASE=postgres
    ports:
      - 3000:3000
    depends_on:
      - db
      - rabbitmq3
  client-service:
    image: client-service
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - 8081:8081
  react-service:
    image: react-service
    build:
      context: ./client-react
      dockerfile: Dockerfile
      target: dev
    ports:
      - 3002:3002
      - 80:80
    volumes:
      - ./client-react:/app
      - ./app/node_modules
    depends_on:
      - db
      - rabbitmq3
      - product-service
  basket-service:
    image: basket-service
    build:
      context: .
      dockerfile: MicroServicesDemo.Basket/Dockerfile
    ports:
      - 5002:5002
    depends_on:
      - db
      - rabbitmq3
